/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RankingsImport } from './routes/rankings'
import { Route as AuthorsAuthorIdImport } from './routes/authors/$authorId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RankingsRoute = RankingsImport.update({
  path: '/rankings',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthorsAuthorIdRoute = AuthorsAuthorIdImport.update({
  path: '/authors/$authorId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/rankings': {
      id: '/rankings'
      path: '/rankings'
      fullPath: '/rankings'
      preLoaderRoute: typeof RankingsImport
      parentRoute: typeof rootRoute
    }
    '/authors/$authorId': {
      id: '/authors/$authorId'
      path: '/authors/$authorId'
      fullPath: '/authors/$authorId'
      preLoaderRoute: typeof AuthorsAuthorIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  RankingsRoute,
  AuthorsAuthorIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/rankings",
        "/authors/$authorId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/rankings": {
      "filePath": "rankings.tsx"
    },
    "/authors/$authorId": {
      "filePath": "authors/$authorId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
